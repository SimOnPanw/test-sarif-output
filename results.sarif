{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "2.3.236", "informationUri": "https://checkov.io", "rules": [{"id": "CVE-2018-1000656_flask@0.10.1", "name": "CVE-2018-1000656 - flask: 0.10.1", "shortDescription": {"text": "CVE-2018-1000656 - flask: 0.10.1"}, "fullDescription": {"text": "The Pallets Project flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3. NOTE: this may overlap CVE-2019-1010083."}, "help": {"text": "SCA package scan\nResource: requirements.txt.flask\nStatus: fixed in 0.12.3"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000656"}, {"id": "CVE-2019-1010083_flask@0.10.1", "name": "CVE-2019-1010083 - flask: 0.10.1", "shortDescription": {"text": "CVE-2019-1010083 - flask: 0.10.1"}, "fullDescription": {"text": "The Pallets Project Flask before 1.0 is affected by: unexpected memory usage. The impact is: denial of service. The attack vector is: crafted encoded JSON data. The fixed version is: 1. NOTE: this may overlap CVE-2018-1000656."}, "help": {"text": "SCA package scan\nResource: requirements.txt.flask\nStatus: fixed in 1.0"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-1010083"}, {"id": "CVE-2023-30861_flask@0.10.1", "name": "CVE-2023-30861 - flask: 0.10.1", "shortDescription": {"text": "CVE-2023-30861 - flask: 0.10.1"}, "fullDescription": {"text": "Flask is a lightweight WSGI web application framework. When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by the proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client\\'s `session` cookie to other clients. The severity depends on the application\\'s use of the session and the proxy\\'s behavior regarding cookies. The risk depends on all these conditions being met.  1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies. 2. The application sets `session.permanent = True` 3. The application does not access or modify the session at any point during a request. 4. `SESSION_REFRESH_EACH_REQUEST` enabled (the default). 5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.  This happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified. This issue has been fixed in versions 2.3.2 and 2.2.5."}, "help": {"text": "SCA package scan\nResource: requirements.txt.flask\nStatus: fixed in 2.3.2, 2.2.5"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-30861"}, {"id": "CVE-2021-44420_django@3.2.8", "name": "CVE-2021-44420 - django: 3.2.8", "shortDescription": {"text": "CVE-2021-44420 - django: 3.2.8"}, "fullDescription": {"text": "In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 3.2.10, 3.1.14, 2.2.25"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-44420"}, {"id": "CVE-2021-45115_django@3.2.8", "name": "CVE-2021-45115 - django: 3.2.8", "shortDescription": {"text": "CVE-2021-45115 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.1, 3.2.11, 2.2.26"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45115"}, {"id": "CVE-2021-45452_django@3.2.8", "name": "CVE-2021-45452 - django: 3.2.8", "shortDescription": {"text": "CVE-2021-45452 - django: 3.2.8"}, "fullDescription": {"text": "Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.1, 3.2.11, 2.2.26"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "6.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45452"}, {"id": "CVE-2021-45116_django@3.2.8", "name": "CVE-2021-45116 - django: 3.2.8", "shortDescription": {"text": "CVE-2021-45116 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language\\'s variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.1, 3.2.11, 2.2.26"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-45116"}, {"id": "CVE-2022-22818_django@3.2.8", "name": "CVE-2022-22818 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-22818 - django: 3.2.8"}, "fullDescription": {"text": "The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.2, 3.2.12, 2.2.27"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "6.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-22818"}, {"id": "CVE-2022-23833_django@3.2.8", "name": "CVE-2022-23833 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-23833 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.2, 3.2.12, 2.2.27"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-23833"}, {"id": "CVE-2022-28346_django@3.2.8", "name": "CVE-2022-28346 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-28346 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.4, 3.2.13, 2.2.28"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "10.0"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-28346"}, {"id": "CVE-2022-28347_django@3.2.8", "name": "CVE-2022-28347 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-28347 - django: 3.2.8"}, "fullDescription": {"text": "A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.4, 3.2.13, 2.2.28"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "10.0"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-28347"}, {"id": "CVE-2022-36359_django@3.2.8", "name": "CVE-2022-36359 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-36359 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in the HTTP FileResponse class in Django 3.2 before 3.2.15 and 4.0 before 4.0.7. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a FileResponse when the filename is derived from user-supplied input."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.7, 4.0, 3.2.15"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-36359"}, {"id": "CVE-2022-41323_django@3.2.8", "name": "CVE-2022-41323 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-41323 - django: 3.2.8"}, "fullDescription": {"text": "In Django 3.2 before 3.2.16, 4.0 before 4.0.8, and 4.1 before 4.1.2, internationalized URLs were subject to a potential denial of service attack via the locale parameter, which is treated as a regular expression."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.1.2, 4.0.8, 3.2.16"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-41323"}, {"id": "CVE-2022-34265_django@3.2.8", "name": "CVE-2022-34265 - django: 3.2.8", "shortDescription": {"text": "CVE-2022-34265 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.0.6, 4.0, 3.2.14"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "10.0"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-34265"}, {"id": "CVE-2023-23969_django@3.2.8", "name": "CVE-2023-23969 - django: 3.2.8", "shortDescription": {"text": "CVE-2023-23969 - django: 3.2.8"}, "fullDescription": {"text": "In Django 3.2 before 3.2.17, 4.0 before 4.0.9, and 4.1 before 4.1.6, the parsed values of Accept-Language headers are cached in order to avoid repetitive parsing. This leads to a potential denial-of-service vector via excessive memory usage if the raw value of Accept-Language headers is very large."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.1.6, 4.0.9, 3.2.17"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-23969"}, {"id": "CVE-2023-24580_django@3.2.8", "name": "CVE-2023-24580 - django: 3.2.8", "shortDescription": {"text": "CVE-2023-24580 - django: 3.2.8"}, "fullDescription": {"text": "An issue was discovered in the Multipart Request Parser in Django 3.2 before 3.2.18, 4.0 before 4.0.10, and 4.1 before 4.1.7. Passing certain inputs (e.g., an excessive number of parts) to multipart forms could result in too many open files or memory exhaustion, and provided a potential vector for a denial-of-service attack."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.1.7, 4.0.10, 3.2.18"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "8.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-24580"}, {"id": "CVE-2023-31047_django@3.2.8", "name": "CVE-2023-31047 - django: 3.2.8", "shortDescription": {"text": "CVE-2023-31047 - django: 3.2.8"}, "fullDescription": {"text": "In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django\\'s \\\"Uploading multiple files\\\" documentation suggested otherwise."}, "help": {"text": "SCA package scan\nResource: requirements.txt.django\nStatus: fixed in 4.2.1, 4.1.9, 3.2.19"}, "defaultConfiguration": {"level": "error"}, "properties": {"security-severity": "6.9"}, "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2023-31047"}, {"id": "OSI_BSD_django@3.2.8", "name": "License OSI_BSD - django: 3.2.8", "shortDescription": {"text": "License OSI_BSD - django: 3.2.8"}, "fullDescription": {"text": "Package django@3.2.8 has license OSI_BSD"}, "help": {"text": "SCA license\nResource: requirements.txt.django"}, "defaultConfiguration": {"level": "error"}}, {"id": "OSI_BSD_flask@0.10.1", "name": "License OSI_BSD - flask: 0.10.1", "shortDescription": {"text": "License OSI_BSD - flask: 0.10.1"}, "fullDescription": {"text": "Package flask@0.10.1 has license OSI_BSD"}, "help": {"text": "SCA license\nResource: requirements.txt.flask"}, "defaultConfiguration": {"level": "error"}}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CVE-2018-1000656_flask@0.10.1", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "CVE-2018-1000656 - flask: 0.10.1"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "flask: 0.10.1"}}}}]}, {"ruleId": "CVE-2019-1010083_flask@0.10.1", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "CVE-2019-1010083 - flask: 0.10.1"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "flask: 0.10.1"}}}}]}, {"ruleId": "CVE-2023-30861_flask@0.10.1", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "CVE-2023-30861 - flask: 0.10.1"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "flask: 0.10.1"}}}}]}, {"ruleId": "CVE-2021-44420_django@3.2.8", "ruleIndex": 3, "level": "error", "attachments": [], "message": {"text": "CVE-2021-44420 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2021-45115_django@3.2.8", "ruleIndex": 4, "level": "error", "attachments": [], "message": {"text": "CVE-2021-45115 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2021-45452_django@3.2.8", "ruleIndex": 5, "level": "warning", "attachments": [], "message": {"text": "CVE-2021-45452 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2021-45116_django@3.2.8", "ruleIndex": 6, "level": "error", "attachments": [], "message": {"text": "CVE-2021-45116 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-22818_django@3.2.8", "ruleIndex": 7, "level": "warning", "attachments": [], "message": {"text": "CVE-2022-22818 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-23833_django@3.2.8", "ruleIndex": 8, "level": "error", "attachments": [], "message": {"text": "CVE-2022-23833 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-28346_django@3.2.8", "ruleIndex": 9, "level": "error", "attachments": [], "message": {"text": "CVE-2022-28346 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-28347_django@3.2.8", "ruleIndex": 10, "level": "error", "attachments": [], "message": {"text": "CVE-2022-28347 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-36359_django@3.2.8", "ruleIndex": 11, "level": "error", "attachments": [], "message": {"text": "CVE-2022-36359 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-41323_django@3.2.8", "ruleIndex": 12, "level": "error", "attachments": [], "message": {"text": "CVE-2022-41323 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2022-34265_django@3.2.8", "ruleIndex": 13, "level": "error", "attachments": [], "message": {"text": "CVE-2022-34265 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2023-23969_django@3.2.8", "ruleIndex": 14, "level": "error", "attachments": [], "message": {"text": "CVE-2023-23969 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2023-24580_django@3.2.8", "ruleIndex": 15, "level": "error", "attachments": [], "message": {"text": "CVE-2023-24580 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "CVE-2023-31047_django@3.2.8", "ruleIndex": 16, "level": "warning", "attachments": [], "message": {"text": "CVE-2023-31047 - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}]}, {"ruleId": "OSI_BSD_django@3.2.8", "ruleIndex": 17, "level": "warning", "attachments": [], "message": {"text": "License OSI_BSD - django: 3.2.8"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "django: 3.2.8"}}}}], "suppressions": [{"kind": "external", "justification": "BC_LIC_1 is skipped"}]}, {"ruleId": "OSI_BSD_flask@0.10.1", "ruleIndex": 18, "level": "warning", "attachments": [], "message": {"text": "License OSI_BSD - flask: 0.10.1"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "requirements.txt"}, "region": {"startLine": 1, "endLine": 1, "snippet": {"text": "flask: 0.10.1"}}}}], "suppressions": [{"kind": "external", "justification": "BC_LIC_1 is skipped"}]}]}]}